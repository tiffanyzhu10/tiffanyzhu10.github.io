knitr::opts_chunk$set(echo = TRUE)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(plotly)
library(raster)
knitr::opts_chunk$set(echo = TRUE)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(plotly)
library(raster)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
setwd("~/Documents/GitHub/tiffanyzhu10.github.io/assignment3")
library(tidyverse)
library(plotly)
library(sf)
library(tigris)
library(leaflet)
library(zoo)
library(censusapi)
library(tidycensus)
library(corrplot)
census_api_key("5ace7165d1f551af1a6a8876ee3986faa544ea83")
Sys.setenv(CENSUS_KEY="5ace7165d1f551af1a6a8876ee3986faa544ea83")
# Get PUMS and PUMAS data
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
pums_vars_2019_inds = pums_vars_2019 %>%
distinct(var_code, var_label, data_type, level) %>%
filter(level == "person")
ca_pums = readRDS("ca_pums.rds")
ca_pumas = pumas("CA", cb = T, progress_bar = F)
# Isolate Bay Area PUMS
bay_county_names =
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
ca_counties = counties("CA", cb = T, progress_bar = F)
bay_counties = ca_counties %>%
filter(NAME %in% bay_county_names)
bay_pumas = ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
setwd("~/Documents/GitHub/tiffanyzhu10.github.io/assignment3")
library(tidyverse)
library(plotly)
library(sf)
library(tigris)
library(leaflet)
library(zoo)
library(censusapi)
library(tidycensus)
library(corrplot)
census_api_key("5ace7165d1f551af1a6a8876ee3986faa544ea83")
Sys.setenv(CENSUS_KEY="5ace7165d1f551af1a6a8876ee3986faa544ea83")
# Get PUMS and PUMAS data
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
pums_vars_2019_inds = pums_vars_2019 %>%
distinct(var_code, var_label, data_type, level) %>%
filter(level == "person")
ca_pums = readRDS("ca_pums.rds")
ca_pumas = pumas("CA", cb = T, progress_bar = F)
# Isolate Bay Area PUMS
bay_county_names =
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
ca_counties = counties("CA", cb = T, progress_bar = F)
bay_counties = ca_counties %>%
filter(NAME %in% bay_county_names)
bay_pumas = ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
install.packages("conflicted")
# Get PUMS and PUMAS data
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
pums_vars_2019_inds = pums_vars_2019 %>%
distinct(var_code, var_label, data_type, level) %>%
filter(level == "person")
ca_pums = readRDS("ca_pums.rds")
ca_pumas = pumas("CA", cb = T, progress_bar = F)
# Isolate Bay Area PUMS
bay_county_names =
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
ca_counties = counties("CA", cb = T, progress_bar = F)
bay_counties = ca_counties %>%
filter(NAME %in% bay_county_names)
bay_pumas = ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
library(conflicted)
bay_pumas = ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
# Get PUMS and PUMAS data
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
