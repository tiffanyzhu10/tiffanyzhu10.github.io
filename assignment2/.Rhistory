library(zoo)
library(censusapi)
library(tidycensus)
library(corrplot)
census_api_key("5ace7165d1f551af1a6a8876ee3986faa544ea83")
Sys.setenv(CENSUS_KEY="5ace7165d1f551af1a6a8876ee3986faa544ea83")
# Correlation plot
correlationplot = bay_marriage %>%
select(mean_personal_income,
perc_college,
perc_married) %>%
cor()
# Correlation plot
correlationplot = bay_marriage %>%
select(mean_personal_income,
perc_college,
perc_married) %>%
cor()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
setwd("~/Documents/GitHub/tiffanyzhu10.github.io/assignment3")
library(tidyverse)
library(plotly)
library(sf)
library(tigris)
library(leaflet)
library(zoo)
library(censusapi)
library(tidycensus)
library(corrplot)
census_api_key("5ace7165d1f551af1a6a8876ee3986faa544ea83")
Sys.setenv(CENSUS_KEY="5ace7165d1f551af1a6a8876ee3986faa544ea83")
# Correlation plot
correlationplot = bay_marriage %>%
select(mean_personal_income,
perc_college,
perc_married) %>%
cor()
bay_marriage
# Clean dataset
# Filter out all children under age 3 (SCHL == bb)
# Convert "character"-encoded variables MAR and SCHL to doubles
# Filter dataset so all individuals are over 18 years old
# Create new variable "married" representing number of ever-married individuals in each PUMA
# Create new variable "college" representing number of college-educated individuals in each PUMA
# Collapse to PUMAs
# Calculate percentage of married and college-educated people in each PUMA
# Additionally calculate weighted mean income in each PUMA
bay_marriage = bay_pums %>%
filter(SCHL != "bb") %>%
mutate(MAR = as.numeric(MAR),
SCHL = as.numeric(SCHL)) %>%
filter(AGEP >= 18) %>%
mutate(married = ifelse(
(MAR < 5),
PWGTP,
0),
college = ifelse(
(SCHL >= 21),
PWGTP,
0
)
) %>%
group_by(PUMA) %>%
summarize(mean_personal_income = weighted.mean(PINCP, PWGTP, na.rm = T),
perc_married = sum(married, na.rm = T)/
sum(PWGTP, na.rm = T)*100,
perc_college = sum(college, na.rm = T)/
sum(PWGTP, na.rm = T)*100)
bay_marriage
bay_marriage_map = bay_marriage %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
marriage_pal = colorNumeric(palette = "Oranges",
domain = bay_marriage_map$perc_married)
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map,
fillColor = ~marriage_pal(perc_married),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
addLegend(data = bay_marriage_map,
pal = marriage_pal,
values = ~perc_married,
title = "Percentage of population<br>that is or has been married")
# Correlation plot
correlationplot = bay_marriage %>%
select(mean_personal_income,
perc_college,
perc_married) %>%
cor()
corrplot(correlationplot,
method = "number",
type = "upper")
all_health = read_csv("https://chronicdata.cdc.gov/api/views/6vp6-wxuq/rows.csv?accessType=DOWNLOAD")
ca_health = filter(all_health, StateAbbr == "CA")
ca_sleep = filter(ca_health, MeasureId == "SLEEP")
# Filter to Bay Area census tracts
ca_tracts = tracts("CA", cb = T, progress_bar = F)
bay_sleep = ca_sleep %>%
filter(!is.na(TractFIPS)) %>%
filter(!is.na(Data_Value)) %>%
mutate(perc_sleepdep = Data_Value) %>%
left_join(ca_tracts %>% select(GEOID),
by = c("TractFIPS" = "GEOID")) %>%
st_as_sf() %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_tracts %>% select(GEOID),
by = c("TractFIPS" = "GEOID")) %>%
st_as_sf()
bay_sleep
saveRDS(all_health, file = "all_health.rds")
bay_marriage
bay_marriage %>% arrange(perc_married)
# Regression
model = lm(perc_married ~ mean_personal_income, bay_marriage)
summary(model)
# Scatterplot
ggplot(data = bay_marriage,
aes(x = mean_personal_income,
y = perc_married)) +
geom_point() +
geom_smooth(method = "lm")
bay_marriage_map_test = bay_marriage %>%
arrange(perc_married) %>%
.[c(1:7)] %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
bay_marriage_map_test = bay_marriage %>%
arrange(perc_married) %>%
.[c(1:7),] %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
marriage_pal = colorNumeric(palette = "Oranges",
domain = bay_marriage_map_test$perc_married)
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
fillColor = ~marriage_pal(perc_married),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
addLegend(data = bay_marriage_map_test,
pal = marriage_pal,
values = ~perc_married,
title = "Test")
bay_marriage_map_test = bay_marriage %>%
filter(perc_marriage < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
marriage_pal = colorNumeric(palette = "Oranges",
domain = bay_marriage_map_test$perc_married)
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
fillColor = ~marriage_pal(perc_married),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
addLegend(data = bay_marriage_map_test,
pal = marriage_pal,
values = ~perc_married,
title = "Test")
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
marriage_pal = colorNumeric(palette = "Oranges",
domain = bay_marriage_map$perc_married)
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
fillColor = ~marriage_pal(perc_married),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
addLegend(data = bay_marriage_map_test,
pal = marriage_pal,
values = ~perc_married,
title = "Test")
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
marriage_pal = colorNumeric(palette = "Oranges",
domain = bay_marriage_map$perc_married)
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
addLegend(data = bay_marriage_map_test,
pal = marriage_pal,
values = ~perc_married,
title = "Test")
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
marriage_pal = colorNumeric(palette = "Oranges",
domain = bay_marriage_map$perc_married)
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
addLegend(data = bay_marriage_map_test,
pal = marriage_pal,
values = ~perc_married,
title = "Test")
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1)) %>%
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.2,
weight = 1,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.1,
weight = 5,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 2,
opacity = 1))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.1,
weight = 3,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
opacity = 1))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.1,
weight = 3,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
opacity = 2))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.2,
weight = 3,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
opacity = 2))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.2,
weight = 5,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 5,
opacity = 4))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "red",
opacity = 1,
fillOpacity = 0.2,
weight = 5,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 5,
opacity = 0))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
opacity = 5))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
fillOpacity = 5))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
fillOpacity = 2))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
fillOpacity = 1))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
fillOpacity = 0.5))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 55) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
fillOpacity = 0.5))
bay_marriage_map_test = bay_marriage %>%
filter(perc_married < 50) %>%
left_join(bay_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10")) %>%
st_as_sf()
leaflet() %>%
addTiles() %>%
addPolygons(data = bay_marriage_map_test,
color = "blue",
opacity = 1,
fillOpacity = 0.2,
weight = 4,
label = ~paste0(round(perc_married),
"% married individuals"),
highlightOptions = highlightOptions(weight = 4,
fillOpacity = 0.5))
