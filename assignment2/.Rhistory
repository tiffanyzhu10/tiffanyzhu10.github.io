best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals^2)
sumsq_residuals
bay_income_race_tract = getCensus(name = "acs/acs5",
vintage = 2018,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,081,095,097",
vars = c("B19001A_001E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E")) %>%
transmute(tract = paste0(state, county, tract),
perc_white = B19001A_001E / B19001_001E,
perc_over100k = (B19001_014E +
B19001_015E +
B19001_016E +
B19001_017E) /
B19001_001E) %>%
filter(!is.na(perc_white),
!is.na(perc_over100k))
ggplot() + geom_point(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k))
ggplot(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k)) +
geom_point() +
geom_smooth(method = "lm")
slope = 0
yintercept = mean(bay_income_race_tract$perc_over100k)
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals^2)
sumsq_residuals
bay_income_race_tract = getCensus(name = "acs/acs5",
vintage = 2018,
region = "tract:*",
regionin = "state:06+county:001,013,041,055,075,081,085,095,097",
vars = c("B19001A_001E",
"B19001_001E",
"B19001_014E",
"B19001_015E",
"B19001_016E",
"B19001_017E")) %>%
transmute(tract = paste0(state, county, tract),
perc_white = B19001A_001E / B19001_001E,
perc_over100k = (B19001_014E +
B19001_015E +
B19001_016E +
B19001_017E) /
B19001_001E) %>%
filter(!is.na(perc_white),
!is.na(perc_over100k))
ggplot() + geom_point(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k))
ggplot(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k)) +
geom_point() +
geom_smooth(method = "lm")
slope = 0
yintercept = mean(bay_income_race_tract$perc_over100k)
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals^2)
sumsq_residuals
slope = 0
yintercept = mean(bay_income_race_tract$perc_over100k)
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals^2)
sumsq_residuals
ggplot(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k)) +
geom_point() +
geom_smooth(method = "lm") +
geom_line(aes(x = bay_income_race_tract$perc_white,
y = best_fit_candidate),
color = "red",
size = 1)
get_sumsq_residuals = function(x) {
slope = x[1]
yintercept = x[2]
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals)
}
get_sumsq_residuals = function(x) {
slope = x[1]
yintercept = x[2]
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals)
}
optimization = optim(c(0,0), get_sumsq_residuals)
optimization
get_sumsq_residuals = function(x) {
slope = x[1]
yintercept = x[2]
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
sumsq_residuals = sum(residuals^2)
}
optimization = optim(c(0,0), get_sumsq_residuals)
optimization
ggplot(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k)) +
geom_point() +
geom_smooth(method = "lm") +
geom_line(aes(x = perc_white,
y = perc_white + optimization$par[1] + optimization$par[2]),
color = "blue",
size = 1)
ggplot(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k)) +
geom_point() +
geom_line(aes(x = perc_white,
y = perc_white + optimization$par[1] + optimization$par[2]),
color = "blue",
size = 1)
ggplot(data = bay_income_race_tract,
aes(x = perc_white,
y = perc_over100k)) +
geom_point() +
geom_line(aes(x = perc_white,
y = perc_white * optimization$par[1] + optimization$par[2]),
color = "blue",
size = 1)
slope = optimization$par[1]
yintercept = optiization$par[2]
slope = optimization$par[1]
yintercept = optimization$par[2]
best_fit_candidate = slope * bay_income_race_tract$perc_white + yintercept
residuals = bay_income_race_tract$perc_over100k - best_fit_candidate
mean(residuals)
plot(density(residuals))
model = lm(perc_over100K ~ perc_white, bay_income_race_tract)
model = lm(perc_over100k ~ perc_white, bay_income_race_tract)
summary(model)
predict(model, data.frame(perc_white = 0.5))
pums_vars_2018 =
pums_variables %>%
filter(year == 2018, survey == "acs5")
# Some setup first
pums_vars_2018 =
pums_variables %>%
filter(year == 2018, survey == "acs5")
ca_pums = get_pums(variables = c("PUMA",
"NP",
"RAC1P",
"HINCP"),
state = "CA",
year = 2018,
survey = "acs5",
recode = T)
ca_pumas = pumas("CA", cb = T, progress_bar = F)
bay_county_names =
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties = counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas = ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums = ca_pums %>% filter(PUMA %in% bay_pumas$PUMACE10)
bay_pums_regression = bay_pums %>%
filter(SPORDER == 1) %>%
mutate(white = ifelse(RAC1P_label == "White alone",
1,
0))
ggplot(data = bay_pums_regression,
aes(x = white,
y = HINCP)) +
geom_point() +
geom_smooth(method = "lm", se = F)
# Some setup first
pums_vars_2018 =
pums_variables %>%
filter(year == 2018, survey == "acs5")
ca_pums = get_pums(variables = c("PUMA",
"NP",
"RAC1P",
"HINCP"),
state = "CA",
year = 2018,
survey = "acs5",
recode = T)
ca_pumas = pumas("CA", cb = T, progress_bar = F)
bay_county_names =
c(
"Alameda",
"Contra Costa",
"Marin",
"Napa",
"San Francisco",
"San Mateo",
"Santa Clara",
"Solano",
"Sonoma"
)
bay_counties = counties("CA", cb = T, progress_bar = F) %>%
filter(NAME %in% bay_county_names)
bay_pumas = ca_pumas %>%
st_centroid() %>%
.[bay_counties, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
bay_pums = ca_pums %>% filter(PUMA %in% bay_pumas$PUMACE10)
bay_pums_regression = bay_pums %>%
filter(SPORDER == 1) %>%
mutate(white = ifelse(RAC1P_label == "White alone",
1,
0))
ggplot(data = bay_pums_regression,
aes(x = white,
y = HINCP)) +
geom_point() +
geom_smooth(method = "lm", se = F)
model_pums = lm(HINCP ~ white, bay_pums_regression, weights = WGTP)
summary(model_pums)
summary(model_pums)
sc_mobility_current_19
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable)
sc_mobility_current_19
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!")
sc_mosc_mobility_current_19
sc_mobility_current_19
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house 1 year ago:", "Moved within same county"),
"Here since last year",
"Inflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
acs_vars_2019_1yr = listCensusMetadata(name = "2019/acs/acs1",
type = "variables")
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house 1 year ago:", "Moved within same county"),
"Here since last year",
"Inflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_mobility_lastyear_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07409)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house:", "Moved within same county:"),
"Here since last year",
"Outflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_mobility_current_18 = getCensus(name = "acs/acs1",
vintage = 2018,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = "Here last year") %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_flows_19 = rbind(sc_mobility_current_18,
sc_mobility_lastyear_19 %>%
filter(mobility == "Outflow"),
sc_mobility_current_19 %>%
filter(mobility == "Inflow"),
sc_mobility_current_19 %>%
group_by(education) %>%
summarize(estimate = sum(estimate)) %>%
mutate(mobility = "Here this year")) %>%
pivot_wider(names_from = mobility,
values_from = estimate) %>%
mutate(`External net` = Inflow - Outflow,
`Internal net` = `Here this year` - `Here last year` - `External net`,) %>%
select(`Education level` = education,
`Internal net`,
`External net`,
`Here last year`,
`Here this year`,
Outflow,
Inflow)
sc_flows_19
sc_mobility_current_19$`Here since last year`
sc_mobility_current_19$"Here since last year"
sc_mobility_current_19
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house 1 year ago:", "Moved within same county"),
"Here since last year",
"Inflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_mobility_current_19
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!")
sc_mobility_current_19
unique(sc_mobility_current_19$mobility)
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house 1 year ago:", "Moved within same county:"),
"Here since last year",
"Inflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_mobility_lastyear_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07409)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house:", "Moved within same county:"),
"Here since last year",
"Outflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_mobility_current_18 = getCensus(name = "acs/acs1",
vintage = 2018,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = "Here last year") %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_flows_19 = rbind(sc_mobility_current_18,
sc_mobility_lastyear_19 %>%
filter(mobility == "Outflow"),
sc_mobility_current_19 %>%
filter(mobility == "Inflow"),
sc_mobility_current_19 %>%
group_by(education) %>%
summarize(estimate = sum(estimate)) %>%
mutate(mobility = "Here this year")) %>%
pivot_wider(names_from = mobility,
values_from = estimate) %>%
mutate(`External net` = Inflow - Outflow,
`Internal net` = `Here this year` - `Here last year` - `External net`,) %>%
select(`Education level` = education,
`Internal net`,
`External net`,
`Here last year`,
`Here this year`,
Outflow,
Inflow)
sc_flows_19
