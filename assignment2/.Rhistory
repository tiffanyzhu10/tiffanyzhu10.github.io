sc_pums = ca_pums %>%
filter(PUMA %in% sc_pumas$PUMACE10)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(no_internet = ifelse(
(ACCESS_label == 3) &
(SCHG_label %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sc_internet
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sc_internet
sum(sc_internet$no_internet)
unique(sc_internet$ACCESS)
unique(sc_internet$SCHG)
sc_internet
ca_pumas %>% mutate(PUMA = as.numeric(PUMA))
ca_pumas = pumas("CA", cb = T, progress_bar = F) %>% mutate(PUMA = as.numeric(PUMA))
ca_pums %>% mutate(PUMA = as.numeric(PUMA))
ca_pumas = pumas("CA", cb = T, progress_bar = F)
sc_pumas = ca_pumas %>%
st_centroid() %>%
.[sc_county, ] %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sc_pums = ca_pums %>%
filter(PUMA %in% sc_pumas$PUMACE10)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sc_internet
ca_pumas
sc_pums = ca_pums %>%
filter(PUMA %in% sc_pumas$PUMACE10) %>%
mutate(PUMA = as.numeric(PUMA))
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sc_pumas = ca_pumas %>%
st_centroid() %>%
.[sc_county, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sc_pums = ca_pums %>%
filter(PUMA %in% sc_pumas$PUMACE10) %>%
mutate(PUMA = as.numeric(PUMA))
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sc_internet
sc_pums$PUMA
sc_pums = ca_pums %>%
filter(PUMA %in% sc_pumas$PUMACE10)
sc_pums$PUMA
sc_pumas
sc_pumas$PUMACE10
sc_pums = ca_pums %>%
filter(PUMA %in% sc_pumas$PUMACE10)
sc_pums
filter(PUMA %in% sc_pumas$PUMACE10)
sc_pums = ca_pums  %>%
mutate(PUMA = as.numeric(PUMA))
sc_pums = ca_pums  %>%
mutate(PUMA = as.numeric(PUMA)) %>%
filter(PUMA %in% sc_pumas$PUMACE10)
sc_pums
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sum(sc_internet$no_internet)
unique(sc_internet$no_internet)
unique(sc_internet$ACCESS)
sc_internet$ACCESS
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
no_internet = ifelse(
(ACCESS == 3),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
unique(sc_internet$no_internet)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
unique(sc_internet$no_internet)
unique(sc_internet$SCHG)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
unique(sc_internet$no_internet)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG %in% 2:14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
unique(sc_internet$no_internet)
unique(sc_internet$SCHG)
# Number of children
sc_internet = sc_pums %>%
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
((SCHG >= 2 |
SCHG <= 14)),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG >= 2 |
SCHG <= 14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
unique(sc_internet$no_internet)
sum(sc_internet$no_internet)
sum(sc_internet$no_internet, na.rm = T)
sum(sc_internet$no_internet, na.rm = T)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG >= 2 |
SCHG <= 14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sum(sc_internet$no_internet, na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
sum(sc_internet$PWGTP, na.rm = T)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG >= 2 &
SCHG <= 14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sum(sc_internet$no_internet, na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
sum(sc_internet$PWGTP %>% filter(SCHG > = ), na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
sum(sc_internet$PWGTP %>% filter(SCHG >= 2 & SCHG <= 14 ), na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
sum(sc_internet$PWGTP %>% select(SCHG >= 2 & SCHG <= 14 ), na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
(sc_internet %>% select(SCHG >= 2 & SCHG <= 14) %>% pull(PWGTP), na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
(sc_internet %>% select(SCHG >= 2 & SCHG <= 14) %>% pull(PWGTP) %>% sum())
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
(sc_internet %>% filter(SCHG >= 2 & SCHG <= 14) %>% pull(PWGTP) %>% sum())
setwd("~/Documents/GitHub/tiffanyzhu10.github.io/assignment2")
save(ca_pums, file = "ca_pums.rds")
ca_pums = read("ca_pums.rds")
ca_pums = readRDS("ca_pums.rds")
ca_pums1 = readRDS("ca_pums.rds")
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Documents/GitHub/tiffanyzhu10.github.io/assignment2")
library(tidyverse)
library(plotly)
library(sf)
library(tigris)
library(leaflet)
library(zoo)
library(censusapi)
library(tidycensus)
census_api_key("5ace7165d1f551af1a6a8876ee3986faa544ea83")
Sys.setenv(CENSUS_KEY="5ace7165d1f551af1a6a8876ee3986faa544ea83")
ca_pums = get_pums(variables = c("PUMA", "ACCESS", "SCHG"),
state = "CA",
year = 2019,
survey = "acs1",
recode = T)
save(ca_pums, file = "ca_pums.rds")
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
pums_vars_2019_inds = pums_vars_2019 %>%
distinct(var_code, var_label, data_type, level) %>%
filter(level == "person")
ca_pums = readRDS("ca_pums.rds")
saveRDS(ca_pums, file = "ca_pums.rds")
ca_pums = readRDS("ca_pums.rds")
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
pums_vars_2019_inds = pums_vars_2019 %>%
distinct(var_code, var_label, data_type, level) %>%
filter(level == "person")
ca_pums = readRDS("ca_pums.rds")
ca_pumas = pumas("CA", cb = T, progress_bar = F)
# Isolate Santa Clara County
ca_counties = counties("CA", cb = T, progress_bar = F)
county_name = c("Santa Clara")
sc_county = ca_counties %>%
filter(NAME %in% county_name)
sc_pumas = ca_pumas %>%
st_centroid() %>%
.[sc_county, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sc_pums = ca_pums  %>%
mutate(PUMA = as.numeric(PUMA)) %>%
filter(PUMA %in% sc_pumas$PUMACE10)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG >= 2 &
SCHG <= 14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sum(sc_internet$no_internet, na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
(sc_internet %>% filter(SCHG >= 2 & SCHG <= 14) %>% pull(PWGTP) %>% sum())
pums_vars_2019 = pums_variables %>%
filter(year == 2019, survey == "acs1")
pums_vars_2019_inds = pums_vars_2019 %>%
distinct(var_code, var_label, data_type, level) %>%
filter(level == "person")
ca_pums = readRDS("ca_pums.rds")
ca_pumas = pumas("CA", cb = T, progress_bar = F)
# Isolate Santa Clara County
ca_counties = counties("CA", cb = T, progress_bar = F)
county_name = c("San Mateo")
sc_county = ca_counties %>%
filter(NAME %in% county_name)
sc_pumas = ca_pumas %>%
st_centroid() %>%
.[sc_county, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sc_pums = ca_pums  %>%
mutate(PUMA = as.numeric(PUMA)) %>%
filter(PUMA %in% sc_pumas$PUMACE10)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG >= 2 &
SCHG <= 14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sum(sc_internet$no_internet, na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
(sc_internet %>% filter(SCHG >= 2 & SCHG <= 14) %>% pull(PWGTP) %>% sum())
ca_counties = counties("CA", cb = T, progress_bar = F)
county_name = c("Sonoma")
sc_county = ca_counties %>%
filter(NAME %in% county_name)
sc_pumas = ca_pumas %>%
st_centroid() %>%
.[sc_county, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sc_pums = ca_pums  %>%
mutate(PUMA = as.numeric(PUMA)) %>%
filter(PUMA %in% sc_pumas$PUMACE10)
# Number of children
sc_internet = sc_pums %>%
filter(!duplicated(SERIALNO)) %>%
mutate(ACCESS = as.numeric(ACCESS),
SCHG = as.numeric(SCHG),
no_internet = ifelse(
(ACCESS == 3) &
(SCHG >= 2 &
SCHG <= 14),
PWGTP,
0)) %>%
group_by(PUMA) %>%
left_join(sc_pumas %>% select(PUMACE10),
by = c("PUMA" = "PUMACE10"))
sum(sc_internet$no_internet, na.rm = T)
# Percentage of children
sum(sc_internet$no_internet, na.rm = T) /
(sc_internet %>% filter(SCHG >= 2 & SCHG <= 14) %>% pull(PWGTP) %>% sum())
# Isolate Santa Clara County
ca_counties = counties("CA", cb = T, progress_bar = F)
county_name = c("Santa Clara")
sc_county = ca_counties %>%
filter(NAME %in% county_name)
sc_pumas = ca_pumas %>%
st_centroid() %>%
.[sc_county, ] %>%
mutate(PUMACE10 = as.numeric(PUMACE10)) %>%
st_set_geometry(NULL) %>%
left_join(ca_pumas %>% select(GEOID10)) %>%
st_as_sf()
sc_pums = ca_pums  %>%
mutate(PUMA = as.numeric(PUMA)) %>%
filter(PUMA %in% sc_pumas$PUMACE10)
sc_pums
sc_county
ca_pumas
acs_vars_2019_1yr = listCensusMetadata(name = "2019/acs/acs1", type = "variables")
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house 1 year ago:", "Moved within same country"),
"Here since last year",
"Inflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
acs_vars_2019_1yr = listCensusMetadata(name = "2019/acs/acs1", type = "variables")
sc_mobility_current_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house 1 year ago:", "Moved within same country"),
"Here since last year",
"Inflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
smc_mobility_lastyear_19 = getCensus(name = "acs/acs1",
vintage = 2019,
region = "county:085",
regionin = "state:06",
vars = c("group(B07409)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = ifelse(mobility %in% c("Same house:", "Moved within same county:"),
"Here since last year",
"Outflow")) %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
sc_mobility_current_18 = getCensus(name = "acs/acs1",
vintage = 2018,
region = "county:085",
regionin = "state:06",
vars = c("group(B07009)")) %>%
select(!c(GEO_ID, state, NAME) &
!ends_with(c("EA", "MA", "M"))) %>%
pivot_longer(ends_with("E"),
names_to = "variable",
values_to = "estimate") %>%
left_join(acs_vars_2019_1yr %>% select(name, label),
by = c("variable" = "name")) %>%
select(-variable) %>%
separate(label,
into = c(NA, NA, "mobility", "education"),
sep = "!!") %>%
mutate(mobility = "Here last year") %>%
filter(!is.na(education)) %>%
group_by(mobility, education) %>%
summarize(estimate = sum(estimate))
